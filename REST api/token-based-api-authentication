Api request from vue component file
===================================

In this example User must enter api token in the page to display content from the users api.N.b. you could create a middleware file to handle CORS header errors.


1. In the routes > api.php file create a route

```
Route::get('users', function() {
$user = request()->user();

return $user->users;
})->middleware('auth:api');

2. In the script section of the vue component file make an axios request to the api

```

data() {
return { users: [], token: '' , message: ''};
},

Methods: {
fetchUsers() {
axios
.get('http://api/users?api_token=${this.token}')
.catch(error => {
this.message = error.response.data.error;
this.users = [];
})
 .then( {{ data }} => {
   this.users = data;
   this.message = null;
   });
   }
   }
   };
```

N.b you will notice in the config > auth.php file the default api driver is token. This allows you to identify as a user using a token 
(e.g. axios.get('http://api/users?api_token=xxxxhkjklxuijllkjj'). when making api request use the token.  
The api will validate the token against what's stored in the database against the account.

3. In the config > auth.php file set api hash to true.

4. in the templae section of the vue component file enter

<input placeholder="your laracasts api token" v-model="token" @keyup.enter="fetchUsers">

<p class="text-red italic text-sm" v-if="message" v-text="message"></p>

<ul>
<li v-for="user in users"
v-text="user.name"></li>
</u>

In the users table create an api_token column
when a user registers on the website assign a random string and assign it as an api token.

Useful code
---------

create a random token - $token = str_random(50);

update token with a hashed token - $me->update(['api_token' => hash('sha256', $token)]);

get the hashed version of the token - $me->api_token
